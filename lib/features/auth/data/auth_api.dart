import 'package:dio/dio.dart';
import 'package:flutter/foundation.dart';
import 'package:prokat_app/core/network/dio_client.dart';
import 'package:prokat_app/core/network/api_exception.dart';

class AuthApi {
  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  Future<void> sendPhone(String phone) async {
    debugPrint('‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä: $phone');
    try {
      final res = await dio.post(
        '/register',
        data: {'phone': phone},
        options: Options(
          contentType: Headers.jsonContentType,
          headers: {'Accept': 'application/json'},
        ),
      );
      debugPrint('‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${res.data}');
    } on DioException catch (e) {
      final msg = _extractErrorMessage(e) ?? '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞';
      throw ApiException(msg, statusCode: e.response?.statusCode);
    }
  }

  /// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞
  Future<void> verifyCode(String phone, String code) async {
    debugPrint('‚û°Ô∏è –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º: $phone, code=$code');
    try {
      final res = await dio.post(
        '/verify',
        data: {'phone': phone, 'code': code},
        options: Options(
          contentType: Headers.jsonContentType,
          headers: {'Accept': 'application/json'},
        ),
      );
      debugPrint('‚úÖ –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω: ${res.data}');
    } on DioException catch (e) {
      final msg = _extractErrorMessage(e) ?? '–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–¥–∞';
      throw ApiException(msg, statusCode: e.response?.statusCode);
    }
  }

  /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
  Future<void> setPassword(String phone, String password) async {
    debugPrint('‚û°Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è $phone');
    try {
      final res = await dio.post(
        '/set-password',
        data: {'phone': phone, 'password': password},
        options: Options(
          contentType: Headers.jsonContentType,
          headers: {'Accept': 'application/json'},
        ),
      );
      debugPrint('üîí –ü–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${res.data}');
    } on DioException catch (e) {
      final msg = _extractErrorMessage(e) ?? '–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–æ–ª—è';
      throw ApiException(msg, statusCode: e.response?.statusCode);
    }
  }

  /// –í—Ö–æ–¥ (password grant)
  Future<String> login(String phone, String password) async {
    debugPrint('‚û°Ô∏è –õ–æ–≥–∏–Ω–∏–º—Å—è: $phone');
    try {
      final res = await dio.post(
        '/login',
        data: {
          'grant_type': 'password',
          'username': phone,
          'password': password,
        },
        options: Options(
          contentType: Headers.formUrlEncodedContentType,
          headers: {'Accept': 'application/json'},
        ),
      );
      final token = res.data['access_token']?.toString();
      if (token == null || token.isEmpty) {
        throw ApiException('–ü—É—Å—Ç–æ–π —Ç–æ–∫–µ–Ω');
      }
      // –ù–µ –ª–æ–≥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω!
      return token;
    } on DioException catch (e) {
      final msg = _extractErrorMessage(e) ?? '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞';
      throw ApiException(msg, statusCode: e.response?.statusCode);
    }
  }

  String? _extractErrorMessage(DioException e) {
    final data = e.response?.data;
    if (data == null) return null;

    if (data is Map && data['detail'] != null) {
      final detail = data['detail'];
      if (detail is String) return detail;
      if (detail is List && detail.isNotEmpty && detail.first is Map) {
        return detail.first['msg']?.toString();
      }
    }
    if (data is Map && data['message'] != null) {
      return data['message'].toString();
    }
    return data.toString();
  }
}
